{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-GB",
    "dataSources": [
      {
        "name": "Custom 25",
        "connectionString": "Provider=MSDASQL.1;Persist Security Info=True;User ID=ssas;Extended Properties=\"DSN=PostgreSQL30;Database=prod\";Initial Catalog=prod",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "AdUnit",
        "columns": [
          {
            "name": "greatgreatgrandparentname",
            "dataType": "string",
            "sourceColumn": "greatgreatgrandparentname"
          },
          {
            "name": "false level",
            "dataType": "string",
            "sourceColumn": "false level"
          },
          {
            "name": "greatgrandparentname",
            "dataType": "string",
            "sourceColumn": "greatgrandparentname"
          },
          {
            "name": "grandparentname",
            "dataType": "string",
            "sourceColumn": "grandparentname"
          },
          {
            "name": "parentname",
            "dataType": "string",
            "sourceColumn": "parentname"
          },
          {
            "name": "childname",
            "dataType": "string",
            "sourceColumn": "childname"
          },
          {
            "name": "ad_unit_id",
            "dataType": "string",
            "sourceColumn": "ad_unit_id"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "source": {
              "query": [
                "SELECT greatgreatgrandparentname, \"false level\", greatgrandparentname, grandparentname, parentname, childname, ad_unit_id ",
                " FROM ftdeepviewdb.ad_unit_new_final"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Ad Units",
            "levels": [
              {
                "name": "Site",
                "ordinal": 0,
                "column": "false level"
              },
              {
                "name": "Primary Ad Unit",
                "ordinal": 1,
                "column": "greatgrandparentname"
              },
              {
                "name": "Secondary Ad Unit",
                "ordinal": 2,
                "column": "grandparentname"
              },
              {
                "name": "Tertiary Ad Unit",
                "ordinal": 3,
                "column": "parentname"
              },
              {
                "name": "Ad Unit",
                "ordinal": 4,
                "column": "childname"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT greatgreatgrandparentname, \"false level\", greatgrandparentname, grandparentname, parentname, childname, ad_unit_id ",
              " FROM ftdeepviewdb.ad_unit_new_final"
            ]
          }
        ]
      },
      {
        "name": "Advertisers",
        "columns": [
          {
            "name": "advertiser_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "advertiser_key"
          },
          {
            "name": "advertiser name unpaid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "advertiser name unpaid"
          },
          {
            "name": "campaign name unpaid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "campaign name unpaid"
          },
          {
            "name": "line item name unpaid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "line item name unpaid"
          },
          {
            "name": "advertiser name paid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "advertiser name paid"
          },
          {
            "name": "campaign name paid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "campaign name paid"
          },
          {
            "name": "line item name paid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "line item name paid"
          },
          {
            "name": "buy_type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "buy_type"
          },
          {
            "name": "cost_model",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "cost_model"
          },
          {
            "name": "currency_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "currency_code"
          },
          {
            "name": "exchange_rate",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "exchange_rate"
          },
          {
            "name": "agency_commission",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "agency_commission"
          },
          {
            "name": "gross_rate_local",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "gross_rate_local"
          },
          {
            "name": "gross_value_local",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "gross_value_local"
          },
          {
            "name": "gross_rate_gbp",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "gross_rate_gbp"
          },
          {
            "name": "gross_value_gbp",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "gross_value_gbp"
          },
          {
            "name": "net_rate_gbp",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "net_rate_gbp"
          },
          {
            "name": "net_value_gbp",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "net_value_gbp"
          },
          {
            "name": "startdate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "startdate"
          },
          {
            "name": "enddate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "enddate"
          },
          {
            "type": "calculated",
            "name": "duration",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "1. *([enddate]-[startdate])"
          },
          {
            "type": "calculated",
            "name": "netrate",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "if(or(or(Advertisers[roadblock_type] = \"Roadblock Master\",Advertisers[roadblock_type] = \"Wrap Master\"), Advertisers[cost_model] = \"CPD\"),    0,",
              "",
              "if(Advertisers[net_rate_gbp]/Advertisers[net_value_gbp] < 0.98,",
              "\t\t\t\t\tif(Advertisers[measured_by_time]= \"No\",[net_rate_gbp]/1000000000,0)",
              "\t\t\t,0))"
            ],
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" xmlns=\"\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "netvalue",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if(Advertisers[net_rate_gbp]<> Advertisers[net_value_gbp],[net_value_gbp]/100000000000,0)",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" xmlns=\"\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "netvalueduration",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if(Advertisers[net_rate_gbp]= Advertisers[net_value_gbp],[net_value_gbp]/1000000/[duration],0)",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" xmlns=\"\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "live",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if([enddate]<=NOW(),1,0)"
          },
          {
            "type": "calculated",
            "name": "startdatekey",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "value(mid([startdate],7,4) & mid([startdate],4,2)  & mid([startdate],1,2))"
          },
          {
            "name": "measured_by_time",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "measured_by_time"
          },
          {
            "type": "calculated",
            "name": "Cost_Model2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "if(and([measured_by_time] = \"Yes\",[net_rate_gbp] >0),\"CPH\", ",
              "\t\t\t\t\tif([cost_model] = \"CPD\",\"CPD\",",
              "\t\t\t\t\t\t\t\tif(and([netrate] = 0,[net_rate_gbp] >0),\"SPR\",",
              "\t\t\t\t\t\t\t\t\t\t\tif([netrate] > 0,\"CPM\", \"Unknown\")",
              "\t\t\t\t\t\t\t\t\t\t\t\t)",
              "\t\t\t\t\t\t\t\t\t)",
              "\t\t\t\t\t)"
            ]
          },
          {
            "name": "adcreative_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "adcreative_key"
          },
          {
            "name": "line_item_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "line_item_name"
          },
          {
            "name": "creative_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "creative_key"
          },
          {
            "name": "creative_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "creative_name"
          },
          {
            "name": "roadblock_type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "roadblock_type"
          },
          {
            "name": "creative_id_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "creative_id_name"
          },
          {
            "name": "wrap_type",
            "dataType": "string",
            "sourceColumn": "wrap_type"
          }
        ],
        "partitions": [
          {
            "name": "dim_advertiser",
            "source": {
              "query": [
                "with cte as (SELECT *",
                "",
                "FROM ftdeepviewdb.dim_advertiser",
                "where advertiser_key not in (select advertiser_key from ftdeepviewdb.dim_advertiser_unpaid)",
                ")",
                "SELECT ",
                "isnull(creative_key || da.advertiser_key, cast(da.advertiser_key as varchar))  as adcreative_key,",
                "da.advertiser_key,",
                "isnull(du.advertiser_name, 'Xcluded - Paid') as \"Advertiser Name Unpaid\",",
                "isnull(du.campaign_name, 'Xcluded - Paid') as \"Campaign Name Unpaid\",",
                "isnull(du.line_item_name, 'Xcluded - Paid') as \"Line Item Name Unpaid\",",
                "isnull(c.advertiser_name, 'Xcluded - Unpaid') as \"Advertiser Name paid\",",
                "isnull(c.campaign_name, 'Xcluded - Unpaid') as \"Campaign Name paid\",",
                "isnull(c.line_item_name, 'Xcluded - Unpaid') as \"Line Item Name paid\",",
                "da.line_item_name,",
                "da.buy_type, ",
                "da.cost_model, ",
                "da.currency_code, ",
                "da.exchange_rate,",
                "dcr.creative_key,",
                "dcr.creative_name, ",
                "da.agency_commission, ",
                "da.gross_rate_local, ",
                "da.gross_value_local, ",
                "da.gross_rate_gbp, ",
                "da.gross_value_gbp, ",
                "da.net_rate_gbp, ",
                "da.net_value_gbp, ",
                "da.startdate, ",
                "da.enddate ,",
                "da.measured_by_time,",
                "da.roadblock_type",
                ",",
                "dcr.creative_id || ' - ' || dcr.creative_id_name as creative_id_name,da.wrap_type ",
                "",
                "",
                "FROM ftdeepviewdb.dim_advertiser da ",
                "left join ftdeepviewdb.dim_advertiser_unpaid du on du.advertiser_key = da.advertiser_key",
                "left join cte c on c.advertiser_key = da.advertiser_key",
                "left join ftdeepviewdb.dim_creative dcr on dcr.line_item_id  = da.line_item_id"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>with cte as (SELECT *",
                  "",
                  "FROM ftdeepviewdb.dim_advertiser",
                  "where advertiser_key not in (select advertiser_key from ftdeepviewdb.dim_advertiser_unpaid)",
                  ")",
                  "SELECT ",
                  "isnull(creative_key || da.advertiser_key, cast(da.advertiser_key as varchar))  as adcreative_key,",
                  "da.advertiser_key,",
                  "isnull(du.advertiser_name, 'Xcluded - Paid') as \"Advertiser Name Unpaid\",",
                  "isnull(du.campaign_name, 'Xcluded - Paid') as \"Campaign Name Unpaid\",",
                  "isnull(du.line_item_name, 'Xcluded - Paid') as \"Line Item Name Unpaid\",",
                  "isnull(c.advertiser_name, 'Xcluded - Unpaid') as \"Advertiser Name paid\",",
                  "isnull(c.campaign_name, 'Xcluded - Unpaid') as \"Campaign Name paid\",",
                  "isnull(c.line_item_name, 'Xcluded - Unpaid') as \"Line Item Name paid\",",
                  "da.line_item_name,",
                  "da.buy_type, ",
                  "da.cost_model, ",
                  "da.currency_code, ",
                  "da.exchange_rate,",
                  "dcr.creative_key,",
                  "dcr.creative_name, ",
                  "da.agency_commission, ",
                  "da.gross_rate_local, ",
                  "da.gross_value_local, ",
                  "da.gross_rate_gbp, ",
                  "da.gross_value_gbp, ",
                  "da.net_rate_gbp, ",
                  "da.net_value_gbp, ",
                  "da.startdate, ",
                  "da.enddate ,",
                  "da.measured_by_time,",
                  "da.roadblock_type",
                  ",",
                  "dcr.creative_id || ' - ' || dcr.creative_id_name as creative_id_name,da.wrap_type ",
                  "",
                  "",
                  "FROM ftdeepviewdb.dim_advertiser da ",
                  "left join ftdeepviewdb.dim_advertiser_unpaid du on du.advertiser_key = da.advertiser_key",
                  "left join cte c on c.advertiser_key = da.advertiser_key",
                  "left join ftdeepviewdb.dim_creative dcr on dcr.line_item_id  = da.line_item_id</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Advertisers Unpaid",
            "levels": [
              {
                "name": "advertiser name unpaid",
                "ordinal": 0,
                "column": "advertiser name unpaid"
              },
              {
                "name": "campaign name unpaid",
                "ordinal": 1,
                "column": "campaign name unpaid"
              },
              {
                "name": "line item name unpaid",
                "ordinal": 2,
                "column": "line item name unpaid"
              }
            ]
          },
          {
            "name": "Advertisers Paid",
            "levels": [
              {
                "name": "advertiser name paid",
                "ordinal": 0,
                "column": "advertiser name paid"
              },
              {
                "name": "campaign name paid",
                "ordinal": 1,
                "column": "campaign name paid"
              },
              {
                "name": "line item name paid",
                "ordinal": 2,
                "column": "line item name paid"
              },
              {
                "name": "creative_name",
                "ordinal": 3,
                "column": "creative_name"
              },
              {
                "name": "creative_id_name",
                "ordinal": 4,
                "column": "creative_id_name"
              }
            ]
          },
          {
            "name": "Cost Model",
            "levels": [
              {
                "name": "CostModel",
                "ordinal": 0,
                "column": "Cost_Model2"
              }
            ]
          },
          {
            "name": "Wraps",
            "levels": [
              {
                "name": "roadblock_type",
                "ordinal": 0,
                "column": "roadblock_type"
              }
            ]
          },
          {
            "name": "Buy Type",
            "levels": [
              {
                "name": "buy_type",
                "ordinal": 0,
                "column": "buy_type"
              }
            ]
          },
          {
            "name": "wrap_category",
            "levels": [
              {
                "name": "wrap_type",
                "ordinal": 0,
                "column": "wrap_type"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "ftdeepviewdb"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_advertiser"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "with cte as (SELECT *",
              "",
              "FROM ftdeepviewdb.dim_advertiser",
              "where advertiser_key not in (select advertiser_key from ftdeepviewdb.dim_advertiser_unpaid)",
              ")",
              "SELECT ",
              "isnull(creative_key || da.advertiser_key, cast(da.advertiser_key as varchar))  as adcreative_key,",
              "da.advertiser_key,",
              "isnull(du.advertiser_name, 'Xcluded - Paid') as \"Advertiser Name Unpaid\",",
              "isnull(du.campaign_name, 'Xcluded - Paid') as \"Campaign Name Unpaid\",",
              "isnull(du.line_item_name, 'Xcluded - Paid') as \"Line Item Name Unpaid\",",
              "isnull(c.advertiser_name, 'Xcluded - Unpaid') as \"Advertiser Name paid\",",
              "isnull(c.campaign_name, 'Xcluded - Unpaid') as \"Campaign Name paid\",",
              "isnull(c.line_item_name, 'Xcluded - Unpaid') as \"Line Item Name paid\",",
              "da.line_item_name,",
              "da.buy_type, ",
              "da.cost_model, ",
              "da.currency_code, ",
              "da.exchange_rate,",
              "dcr.creative_key,",
              "dcr.creative_name, ",
              "da.agency_commission, ",
              "da.gross_rate_local, ",
              "da.gross_value_local, ",
              "da.gross_rate_gbp, ",
              "da.gross_value_gbp, ",
              "da.net_rate_gbp, ",
              "da.net_value_gbp, ",
              "da.startdate, ",
              "da.enddate ,",
              "da.measured_by_time,",
              "da.roadblock_type",
              ",",
              "dcr.creative_id || ' - ' || dcr.creative_id_name as creative_id_name,da.wrap_type ",
              "",
              "",
              "FROM ftdeepviewdb.dim_advertiser da ",
              "left join ftdeepviewdb.dim_advertiser_unpaid du on du.advertiser_key = da.advertiser_key",
              "left join cte c on c.advertiser_key = da.advertiser_key",
              "left join ftdeepviewdb.dim_creative dcr on dcr.line_item_id  = da.line_item_id"
            ]
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>with cte as (SELECT *",
              "",
              "FROM ftdeepviewdb.dim_advertiser",
              "where advertiser_key not in (select advertiser_key from ftdeepviewdb.dim_advertiser_unpaid)",
              ")",
              "SELECT ",
              "isnull(creative_key || da.advertiser_key, cast(da.advertiser_key as varchar))  as adcreative_key,",
              "da.advertiser_key,",
              "isnull(du.advertiser_name, 'Xcluded - Paid') as \"Advertiser Name Unpaid\",",
              "isnull(du.campaign_name, 'Xcluded - Paid') as \"Campaign Name Unpaid\",",
              "isnull(du.line_item_name, 'Xcluded - Paid') as \"Line Item Name Unpaid\",",
              "isnull(c.advertiser_name, 'Xcluded - Unpaid') as \"Advertiser Name paid\",",
              "isnull(c.campaign_name, 'Xcluded - Unpaid') as \"Campaign Name paid\",",
              "isnull(c.line_item_name, 'Xcluded - Unpaid') as \"Line Item Name paid\",",
              "da.line_item_name,",
              "da.buy_type, ",
              "da.cost_model, ",
              "da.currency_code, ",
              "da.exchange_rate,",
              "dcr.creative_key,",
              "dcr.creative_name, ",
              "da.agency_commission, ",
              "da.gross_rate_local, ",
              "da.gross_value_local, ",
              "da.gross_rate_gbp, ",
              "da.gross_value_gbp, ",
              "da.net_rate_gbp, ",
              "da.net_value_gbp, ",
              "da.startdate, ",
              "da.enddate ,",
              "da.measured_by_time,",
              "da.roadblock_type",
              ",",
              "dcr.creative_id || ' - ' || dcr.creative_id_name as creative_id_name,da.wrap_type ",
              "",
              "",
              "FROM ftdeepviewdb.dim_advertiser da ",
              "left join ftdeepviewdb.dim_advertiser_unpaid du on du.advertiser_key = da.advertiser_key",
              "left join cte c on c.advertiser_key = da.advertiser_key",
              "left join ftdeepviewdb.dim_creative dcr on dcr.line_item_id  = da.line_item_id</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Categories",
        "columns": [
          {
            "name": "category_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "category_key"
          },
          {
            "name": "category_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "category_code"
          },
          {
            "name": "parent_category",
            "dataType": "string",
            "sourceColumn": "parent_category"
          },
          {
            "name": "sub_category",
            "dataType": "string",
            "sourceColumn": "sub_category"
          }
        ],
        "partitions": [
          {
            "name": "dim_category",
            "source": {
              "query": "SELECT [ftdeepviewdb].[dim_category].*   FROM [ftdeepviewdb].[dim_category]",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Ad Categories",
            "levels": [
              {
                "name": "parent_category",
                "ordinal": 0,
                "column": "parent_category"
              },
              {
                "name": "sub_category",
                "ordinal": 1,
                "column": "sub_category"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "ftdeepviewdb"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_category"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "     SELECT [ftdeepviewdb].[dim_category].*   FROM [ftdeepviewdb].[dim_category] "
          }
        ]
      },
      {
        "name": "Region",
        "columns": [
          {
            "name": "country",
            "dataType": "string",
            "sourceColumn": "country"
          },
          {
            "name": "region",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "region"
          },
          {
            "name": "city",
            "dataType": "string",
            "sourceColumn": "city"
          },
          {
            "name": "dim_event_country_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dim_event_country_key"
          },
          {
            "name": "continent",
            "dataType": "string",
            "sourceColumn": "continent"
          },
          {
            "name": "trade_region",
            "dataType": "string",
            "sourceColumn": "trade_region"
          }
        ],
        "partitions": [
          {
            "name": "dim_event_country",
            "source": {
              "query": "SELECT [ftdeepviewdb].[dim_event_country].[country],[ftdeepviewdb].[dim_event_country].[region],[ftdeepviewdb].[dim_event_country].[city],[ftdeepviewdb].[dim_event_country].[dim_event_country_key],[ftdeepviewdb].[dim_event_country].[continent] ,trade_region  FROM [ftdeepviewdb].[dim_event_country]",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Regions",
            "levels": [
              {
                "name": "continent",
                "ordinal": 0,
                "column": "continent"
              },
              {
                "name": "country",
                "ordinal": 1,
                "column": "country"
              },
              {
                "name": "region",
                "ordinal": 2,
                "column": "region"
              },
              {
                "name": "city",
                "ordinal": 3,
                "column": "city"
              }
            ]
          },
          {
            "name": "Trade Areas",
            "levels": [
              {
                "name": "trade_region",
                "ordinal": 0,
                "column": "trade_region"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "ftdeepviewdb"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_event_country"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT [ftdeepviewdb].[dim_event_country].[country],[ftdeepviewdb].[dim_event_country].[region],[ftdeepviewdb].[dim_event_country].[city],[ftdeepviewdb].[dim_event_country].[dim_event_country_key],[ftdeepviewdb].[dim_event_country].[continent] ,trade_region  FROM [ftdeepviewdb].[dim_event_country]"
          }
        ]
      },
      {
        "name": "Event_Demographics",
        "columns": [
          {
            "name": "dim_event_demographics_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dim_event_demographics_key"
          },
          {
            "name": "os",
            "dataType": "string",
            "sourceColumn": "os"
          },
          {
            "name": "internetconnection",
            "dataType": "string",
            "sourceColumn": "internetconnection"
          },
          {
            "name": "browser",
            "dataType": "string",
            "sourceColumn": "browser"
          },
          {
            "name": "ad_position",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ad_position"
          },
          {
            "name": "creative_size",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "creative_size"
          }
        ],
        "partitions": [
          {
            "name": "dim_event_demographics",
            "source": {
              "query": "SELECT [ftdeepviewdb].[dim_event_demographics].*   FROM [ftdeepviewdb].[dim_event_demographics]",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "ftdeepviewdb"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_event_demographics"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "     SELECT [ftdeepviewdb].[dim_event_demographics].*   FROM [ftdeepviewdb].[dim_event_demographics] "
          }
        ]
      },
      {
        "name": "Time_of_Day",
        "columns": [
          {
            "name": "dim_time_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dim_time_key"
          },
          {
            "name": "hour",
            "dataType": "string",
            "sourceColumn": "hour"
          },
          {
            "name": "daycategory",
            "dataType": "string",
            "sourceColumn": "daycategory"
          }
        ],
        "partitions": [
          {
            "name": "dim_time",
            "source": {
              "query": "SELECT [ftdeepviewdb].[dim_time].*   FROM [ftdeepviewdb].[dim_time]",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "ftdeepviewdb"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_time"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "     SELECT [ftdeepviewdb].[dim_time].*   FROM [ftdeepviewdb].[dim_time] "
          }
        ]
      },
      {
        "name": "Metrics",
        "columns": [
          {
            "name": "date_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "date_key"
          },
          {
            "name": "imp_demos_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "imp_demos_key"
          },
          {
            "name": "user_demos_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "user_demos_key"
          },
          {
            "name": "category_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "category_key"
          },
          {
            "name": "advertiser_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "advertiser_key"
          },
          {
            "name": "ad_unit_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ad_unit_key"
          },
          {
            "name": "country_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "country_key"
          },
          {
            "name": "dfp_impression_erights_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dfp_impression_erights_id"
          },
          {
            "name": "dfp_impression_user_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dfp_impression_user_id"
          },
          {
            "name": "dfp_click_erights_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dfp_click_erights_id"
          },
          {
            "name": "dfp_click_user_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dfp_click_user_id"
          },
          {
            "name": "page_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "page_key"
          },
          {
            "name": "time_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "time_key"
          },
          {
            "name": "value",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "value"
          },
          {
            "name": "event_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "event_key"
          },
          {
            "type": "calculated",
            "name": "Impressions",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF('Metrics'[event_key] =1,1,0)"
          },
          {
            "type": "calculated",
            "name": "Clicks",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF('Metrics'[event_key] =0,1,0)"
          },
          {
            "type": "calculated",
            "name": "Impressions DFP Users",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(ISBLANK(Metrics[dfp_impression_user_id]),0,1)"
          },
          {
            "type": "calculated",
            "name": "Impressions Erights Users",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF(ISBLANK(Metrics[dfp_impression_erights_id]),0,1)"
          },
          {
            "type": "calculated",
            "name": "Clicks DFP Users",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if(isblank(Metrics[dfp_click_user_id]),0,1)"
          },
          {
            "type": "calculated",
            "name": "Clicks Erights Users",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if(isblank(Metrics[dfp_click_erights_id]),0,1)"
          },
          {
            "type": "calculated",
            "name": "netcpm",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "if([event_key] = 1,if(related(Advertisers[buy_type]) = \"Traffic Driver\",1,",
              "\t\t\tif(or(related(Advertisers[buy_type]) = \"Added Value\",related(Advertisers[buy_type]) = \"Monetised Inventory\"),1,if(related(Advertisers[buy_type]) = \"FT Adviser\",1,0))),0)",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "costperunit",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "related(Advertisers[netrate])"
          },
          {
            "type": "calculated",
            "name": "revenuecalc",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "If([tablekey] = RELATED(DailyCounts[tablekey]),related(DailyCounts[dailyrevenue]))"
          },
          {
            "name": "creative_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "creative_key"
          },
          {
            "name": "ad_position",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ad_position"
          },
          {
            "name": "creative_size",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "creative_size"
          },
          {
            "name": "adcreative_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "adcreative_key"
          },
          {
            "name": "tablekey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "tablekey"
          },
          {
            "name": "pt",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "pt"
          },
          {
            "name": "res",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "res"
          },
          {
            "name": "slv",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "slv"
          },
          {
            "name": "industry",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "industry"
          },
          {
            "name": "position",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "position"
          },
          {
            "name": "responsibility",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "responsibility"
          },
          {
            "name": "segmentid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "segmentid"
          },
          {
            "name": "gender",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "gender"
          },
          {
            "name": "guid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "guid"
          },
          {
            "name": "admant",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "admant"
          },
          {
            "name": "category",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "category"
          },
          {
            "name": "user_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "user_id"
          },
          {
            "name": "krux_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "krux_key"
          }
        ],
        "partitions": [
          {
            "name": "20151001_20151231",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20151001 and 20151231)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20151001 and 20151231)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20160101_20160229",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "   (date_key between  20160101 and 20160229)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "   (date_key between  20160101 and 20160229)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20160301_20160430",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "    (date_key between  20160301 and 20160430)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "    (date_key between  20160301 and 20160430)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20160501_20160630",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "    (date_key between  20160501 and 20160630)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "    (date_key between  20160501 and 20160630)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20160701_20160831",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "   (date_key between  20160701 and 20160831)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "   (date_key between  20160701 and 20160831)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20160901_20160930",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "   (date_key between  20160901 and 20160930)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "   (date_key between  20160901 and 20160930)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20161001_20161031",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "   (date_key between  20161001 and 20161031)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "   (date_key between  20161001 and 20161031)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20161101_20161130",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                "  (date_key between  20161101 and 20161130)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  "  (date_key between  20161101 and 20161130)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20161201_20161231",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                " ",
                "  (date_key between  20161201 and 20161231)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  " ",
                  "  (date_key between  20161201 and 20161231)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20170101_20170131",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "  ",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                "where ",
                " ",
                "  date_key between 20170101 and 20170131"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "  ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id ",
                  "where ",
                  " ",
                  "  date_key between 20170101 and 20170131</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20150901_20150930",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20150901 and 20150930)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20150901 and 20150930)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20150801_20150831",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20150801 and 20150831)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20150801 and 20150831)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20150401_20150430",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                " ",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20150401 and 20150430)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  " ",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20150401 and 20150430)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20150701_20150731",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20150701 and 20150731)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20150701 and 20150731)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20150601_20150630",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20150601 and 20150630)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20150601 and 20150630)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20170201_20170228",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20170201 and 20170228)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20170201 and 20170228)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "",
                "where (date_key between  20170401 and 20170430)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "",
                  "where (date_key between  20170401 and 20170430)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "20170301_20170331",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "",
                "",
                "",
                " ",
                "",
                "from ftdeepviewdb.facttable fa",
                "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                "",
                "where (date_key between  20170301 and 20170331)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  " ",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "--inner join ftdeepviewdb.dim_creative dcr on dcr.creative_id = di.creative_id",
                  "",
                  "where (date_key between  20170301 and 20170331)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "missing",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "",
                "where  (date_key between  20170501 and 20170516)"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "",
                  "where  (date_key between  20170501 and 20170516)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "missing2",
            "mode": "import",
            "source": {
              "query": [
                "select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                "case",
                "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                "else ",
                "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                ",cast(cast(date_key || case",
                "                when fa.advertiser_key = -1 then 0",
                "                else fa.advertiser_key",
                "end as bigint) || case",
                "        when fa.creative_key = -1 then 0",
                "        else fa.creative_key",
                "        end as bigint) as tablekey",
                "",
                ",",
                "isnull(fa.pt, 'Unknown') as pt ",
                ",isnull(fa.res, 'Unknown') as res ",
                ",fa.slv",
                ",fa.industry,fa.position,fa.responsibility",
                " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                " , fa.gender",
                ", case",
                "when dfp_impression_user_id is null then",
                "                        case when dfp_impression_erights_id is null then",
                "                                                        case when fa.guid is null then ",
                "                                                                                     case when fa.spoor_id is null then  null",
                "                                                                                else fa.spoor_id || date_key",
                "                                                                                end",
                "                                                        else fa.guid || date_key ",
                "                                                        end",
                "                         else dfp_impression_erights_id || date_key ",
                "                         end",
                "else dfp_impression_user_id || date_key ",
                "end as user_id,fa.guid",
                ",fa.admant",
                ",fa.category",
                ", ",
                "isnull(fa.krux_key,-1) as krux_key",
                " ",
                "",
                "",
                "",
                "from ftdeepviewdb.facttable fa",
                "",
                "where  date_key = 20170517"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
                  "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
                  "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
                  "case",
                  "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
                  "else ",
                  "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
                  ",cast(cast(date_key || case",
                  "                when fa.advertiser_key = -1 then 0",
                  "                else fa.advertiser_key",
                  "end as bigint) || case",
                  "        when fa.creative_key = -1 then 0",
                  "        else fa.creative_key",
                  "        end as bigint) as tablekey",
                  "",
                  ",",
                  "isnull(fa.pt, 'Unknown') as pt ",
                  ",isnull(fa.res, 'Unknown') as res ",
                  ",fa.slv",
                  ",fa.industry,fa.position,fa.responsibility",
                  " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
                  " , fa.gender",
                  ", case",
                  "when dfp_impression_user_id is null then",
                  "                        case when dfp_impression_erights_id is null then",
                  "                                                        case when fa.guid is null then ",
                  "                                                                                     case when fa.spoor_id is null then  null",
                  "                                                                                else fa.spoor_id || date_key",
                  "                                                                                end",
                  "                                                        else fa.guid || date_key ",
                  "                                                        end",
                  "                         else dfp_impression_erights_id || date_key ",
                  "                         end",
                  "else dfp_impression_user_id || date_key ",
                  "end as user_id,fa.guid",
                  ",fa.admant",
                  ",fa.category",
                  ", ",
                  "isnull(fa.krux_key,-1) as krux_key",
                  " ",
                  "",
                  "",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "",
                  "where  date_key = 20170517</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "CTR",
            "expression": "[Total Clicks]/[Total  Impressions]",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Known unique users",
            "expression": "DISTINCTCOUNT([dfp_impression_erights_id])",
            "displayFolder": "Unique User Counts"
          },
          {
            "name": "Unknown unique users",
            "expression": "DISTINCTCOUNT([dfp_impression_user_id])",
            "displayFolder": "Unique User Counts"
          },
          {
            "name": "Distinct Count Clicks Erights Users",
            "expression": "DISTINCTCOUNT([dfp_click_erights_id])",
            "isHidden": true
          },
          {
            "name": "Distinct Count Clicks DFP Users",
            "expression": "DISTINCTCOUNT([dfp_click_user_id])",
            "isHidden": true
          },
          {
            "name": "Total impressions unknown users",
            "expression": "SUM([Impressions DFP Users])",
            "displayFolder": "Known/Unknown Impressions"
          },
          {
            "name": "Total impressions known users",
            "expression": "SUM([Impressions Erights Users])",
            "displayFolder": "Known/Unknown Impressions"
          },
          {
            "name": "Total clicks unknown users",
            "expression": "SUM([Clicks DFP Users])",
            "displayFolder": "Known/Unknown Impressions"
          },
          {
            "name": "Total clicks known users",
            "expression": "SUM([Clicks Erights Users])",
            "displayFolder": "Known/Unknown Impressions"
          },
          {
            "name": "Total  Impressions",
            "expression": "sum([Impressions])"
          },
          {
            "name": "Total Clicks",
            "expression": "SUM([Clicks])"
          },
          {
            "name": "All unique users",
            "expression": "[Known unique users]+[Unknown unique users]",
            "displayFolder": "Unique User Counts"
          },
          {
            "name": "Sum of Distinct Clicks",
            "expression": "[Distinct Count Clicks Erights Users]+[Distinct Count Clicks DFP Users]",
            "isHidden": true
          },
          {
            "name": "countofimpressions",
            "expression": "count([netcpm])",
            "isHidden": true
          },
          {
            "name": "Sell Through",
            "expression": "sum([netcpm])/[countofimpressions]",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "MMX"
          },
          {
            "name": "eCPM_CPM",
            "expression": "sum([costperunit])/[Total  Impressions]*1000",
            "isHidden": true
          },
          {
            "name": "eCPM",
            "expression": [
              "if([eCPM_CPM] > 0, [eCPM_CPM],",
              "\t\t\t\tif([Total  Impressions] > 0,[net_value]/[Total  Impressions] * 1000, blank()))"
            ],
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "SponsorshipRollup2",
            "expression": "[daterange]",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Revenue",
            "expression": "sum([costperunit])",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_Revenue1",
            "expression": "[revenue]+[sumxsponsorshiptotal]",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "net_value",
            "expression": "max(Advertisers[net_value_gbp])/1000000",
            "isHidden": true
          },
          {
            "name": "datecalc",
            "expression": [
              "if(max([date_key]) - max(Advertisers[startdatekey]) +1 < 0, ",
              "\t\tblank(),max([date_key]) - min([date_key]) +1)"
            ],
            "isHidden": true
          },
          {
            "name": "CumulativeImpressions",
            "expression": [
              "CALCULATE (",
              "    SUM ( [Impressions] ),",
              "    FILTER  (ALLSELECTED(dates),'dates'[fulldate]  <=max(Dates[fulldate])",
              "    )",
              "\t",
              "\t)"
            ],
            "isHidden": true
          },
          {
            "name": "e_CPM_bak",
            "expression": [
              "IF(COUNTROWS(VALUES(Dates[fulldate]))=1,",
              " [e_CPM2],",
              " ",
              " if([Total  Impressions]>0, SUMX(VALUES(dates[fulldate]), [Combined_Revenue])/[Total  Impressions] * 1000,blank())",
              "     ",
              ")"
            ],
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "totalecpm",
            "expression": "if([Total  Impressions] > 0,[Combined_Revenue]/[Total  Impressions]*1000, blank())",
            "isHidden": true
          },
          {
            "name": "Total_Revenue",
            "expression": [
              "IF(COUNTROWS(VALUES(Dates[fulldate]))=1,",
              " [Total_Revenue1],",
              " SUMX(VALUES(dates[fulldate]), [Total_Revenue1])",
              "     ",
              ")"
            ],
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "e_CPM2",
            "expression": [
              "IF(HASONEFILTER(Advertisers[line item name paid]),",
              "\t\tif(max(advertisers[netvalueduration]) > 0,",
              "\t\t\t\t\t",
              "\t\t\t\t\tmax(advertisers[netvalueduration]) ",
              "\t\t\t\t\t*(if([CumulativeImpressions]> 0,[datecalc]/[CumulativeImpressions] * 1000,blank())),",
              "\t\t\t\t\t\tif([Total  Impressions]> 0,max(advertisers[net_rate_gbp]) /1000000,blank())),\t\t",
              "\t\t\t\t\t[totalecpm])"
            ],
            "isHidden": true
          },
          {
            "name": "sumxsponsorshiptotal",
            "expression": "SUMX(VALUES(Advertisers[line item name paid]), [SponsorshipRollup2])",
            "isHidden": true
          },
          {
            "name": "daterange",
            "expression": [
              "if(min(dates[fulldate]) <max(advertisers[startdate]) ||  max(dates[fulldate])>max(advertisers[enddate]) ",
              ",0,sum(Advertisers[netvalueduration]))"
            ],
            "isHidden": true
          },
          {
            "name": "SPRrevenue",
            "expression": "sum([revenuecalc])",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Combined_Revenue",
            "expression": "[Revenue]+[SPRrevenue]",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "displayFolder": "MMX",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "e_CPM",
            "expression": "if([Total  Impressions]>0,[Combined_Revenue]/[Total  Impressions] * 1000,blank())",
            "formatString": "\"£\"#,0.00;-\"£\"#,0.00;\"£\"#,0.00",
            "displayFolder": "MMX",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"2057\" DisplayName=\"£ English (United Kingdom)\" Symbol=\"£\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "factsummary"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select top 1  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
              "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
              "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
              "case",
              "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
              "else ",
              "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
              ",cast(cast(date_key || case",
              "                when fa.advertiser_key = -1 then 0",
              "                else fa.advertiser_key",
              "end as bigint) || case",
              "        when fa.creative_key = -1 then 0",
              "        else fa.creative_key",
              "        end as bigint) as tablekey",
              "",
              ",",
              "isnull(fa.pt, 'Unknown') as pt ",
              ",isnull(fa.res, 'Unknown') as res ",
              ",fa.slv",
              ",fa.industry,fa.position,fa.responsibility",
              " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
              " , fa.gender",
              ", case",
              "when dfp_impression_user_id is null then",
              "                        case when dfp_impression_erights_id is null then",
              "                                                        case when fa.guid is null then ",
              "                                                                                     case when fa.spoor_id is null then  null",
              "                                                                                else fa.spoor_id || date_key",
              "                                                                                end",
              "                                                        else fa.guid || date_key ",
              "                                                        end",
              "                         else dfp_impression_erights_id || date_key ",
              "                         end",
              "else dfp_impression_user_id || date_key ",
              "end as user_id,fa.guid",
              ",fa.admant",
              ",fa.category",
              ", ",
              "isnull(fa.krux_key,-1) as krux_key",
              " ",
              "from ftdeepviewdb.facttable fa ",
              "where ",
              "   (date_key between  20160823 and 20160828)"
            ]
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select top 1  page_key, time_key, date_key, imp_demos_key, user_demos_key,  advertiser_key, category_key, value,  ",
              "dfp_click_user_id, dfp_impression_user_id, dfp_impression_erights_id, dfp_click_erights_id, ",
              "event_key, ad_unit_key,  country_key,fa.creative_key ,isnull(fa.ad_position ,'Unknown')  as ad_position,isnull(fa.creative_size,'Unknown') as creative_size,",
              "case",
              "when fa.creative_key = -1 or fa.creative_key is null then isnull(cast(fa.advertiser_key as varchar), '-1')",
              "else ",
              "cast(fa.creative_key as varchar)|| cast(fa.advertiser_key as varchar) end  as adcreative_key",
              ",cast(cast(date_key || case",
              "                when fa.advertiser_key = -1 then 0",
              "                else fa.advertiser_key",
              "end as bigint) || case",
              "        when fa.creative_key = -1 then 0",
              "        else fa.creative_key",
              "        end as bigint) as tablekey",
              "",
              ",",
              "isnull(fa.pt, 'Unknown') as pt ",
              ",isnull(fa.res, 'Unknown') as res ",
              ",fa.slv",
              ",fa.industry,fa.position,fa.responsibility",
              " ,fa.responsibility + '_' + fa.position  + '_' + fa.industry as SegmentID",
              " , fa.gender",
              ", case",
              "when dfp_impression_user_id is null then",
              "                        case when dfp_impression_erights_id is null then",
              "                                                        case when fa.guid is null then ",
              "                                                                                     case when fa.spoor_id is null then  null",
              "                                                                                else fa.spoor_id || date_key",
              "                                                                                end",
              "                                                        else fa.guid || date_key ",
              "                                                        end",
              "                         else dfp_impression_erights_id || date_key ",
              "                         end",
              "else dfp_impression_user_id || date_key ",
              "end as user_id,fa.guid",
              ",fa.admant",
              ",fa.category",
              ", ",
              "isnull(fa.krux_key,-1) as krux_key",
              " ",
              "from ftdeepviewdb.facttable fa ",
              "where ",
              "   (date_key between  20160823 and 20160828)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Dates",
        "columns": [
          {
            "name": "datekey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "datekey"
          },
          {
            "name": "fulldate",
            "dataType": "dateTime",
            "sourceColumn": "fulldate",
            "formatString": "General Date",
            "sortByColumn": "datekey"
          },
          {
            "name": "fulldatename",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "fulldatename"
          },
          {
            "name": "dayofweekkey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "dayofweekkey"
          },
          {
            "name": "dayofweek",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dayofweek",
            "sortByColumn": "dayofweekkey"
          },
          {
            "name": "dayofweekshort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "dayofweekshort"
          },
          {
            "name": "weekofyear",
            "dataType": "int64",
            "sourceColumn": "weekofyear"
          },
          {
            "name": "calendaryearmonth",
            "dataType": "string",
            "sourceColumn": "calendaryearmonth"
          },
          {
            "name": "week",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "week"
          },
          {
            "name": "monthofyear",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "monthofyear"
          },
          {
            "name": "calendarmonth",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "calendarmonth"
          },
          {
            "name": "calendaryear",
            "dataType": "int64",
            "sourceColumn": "calendaryear"
          },
          {
            "name": "year",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "year"
          },
          {
            "name": "weekstartdate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "weekstartdate",
            "formatString": "General Date"
          },
          {
            "name": "weekenddate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "weekenddate",
            "formatString": "General Date"
          },
          {
            "name": "relativeweekskey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "relativeweekskey"
          },
          {
            "name": "weekcommencing",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "weekcommencing",
            "formatString": "General Date"
          },
          {
            "name": "weekending",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "weekending",
            "formatString": "General Date"
          },
          {
            "name": "relativeyearskey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "relativeyearskey"
          },
          {
            "name": "calendarmonthofyear",
            "dataType": "string",
            "sourceColumn": "calendarmonthofyear",
            "sortByColumn": "monthofyear"
          },
          {
            "name": "calendarmonthofyearshort",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "calendarmonthofyearshort"
          },
          {
            "name": "datenameeu",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "datenameeu"
          },
          {
            "name": "dayofmonth",
            "dataType": "int64",
            "sourceColumn": "dayofmonth"
          },
          {
            "name": "fiscalweekofyear",
            "dataType": "int64",
            "sourceColumn": "fiscalweekofyear"
          }
        ],
        "partitions": [
          {
            "name": "Dates",
            "source": {
              "query": [
                "SELECT datekey, ",
                "fulldate, ",
                "fulldatename, ",
                "dayofweek as dayofweekkey, ",
                "daynameofweek as dayofweek, ",
                "daynameofweekabbreviated as dayofweekshort, ",
                "weekofyear, ",
                "calendaryearmonth, ",
                "weekofyearname as week, ",
                "monthofyear, ",
                "monthofyearname as calendarmonth, ",
                "--calendarmonthofyearshort, ",
                "calendaryear, ",
                "fiscalyear as year, ",
                "weekstartdate, ",
                "weekenddate, ",
                "--yearstartdate, ",
                "--yearenddate, ",
                "relativeweeks as relativeweekskey, ",
                "--week, ",
                "weekstartdate as weekcommencing, ",
                "weekenddate as weekending, ",
                "relativeyears as relativeyearskey,fiscalweekofyear, ",
                "--calendarmonthkey, ",
                "monthname as calendarmonthofyear, ",
                "monthnameabbreviated as calendarmonthofyearshort,",
                "datenameeu ,",
                "dayofmonth",
                "FROM ftmicoredb.dim_date",
                "where calendaryear between 2013 and datepart(year,getdate())"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT datekey, ",
                  "fulldate, ",
                  "fulldatename, ",
                  "dayofweek as dayofweekkey, ",
                  "daynameofweek as dayofweek, ",
                  "daynameofweekabbreviated as dayofweekshort, ",
                  "weekofyear, ",
                  "calendaryearmonth, ",
                  "weekofyearname as week, ",
                  "monthofyear, ",
                  "monthofyearname as calendarmonth, ",
                  "--calendarmonthofyearshort, ",
                  "calendaryear, ",
                  "fiscalyear as year, ",
                  "weekstartdate, ",
                  "weekenddate, ",
                  "--yearstartdate, ",
                  "--yearenddate, ",
                  "relativeweeks as relativeweekskey, ",
                  "--week, ",
                  "weekstartdate as weekcommencing, ",
                  "weekenddate as weekending, ",
                  "relativeyears as relativeyearskey,fiscalweekofyear, ",
                  "--calendarmonthkey, ",
                  "monthname as calendarmonthofyear, ",
                  "monthnameabbreviated as calendarmonthofyearshort,",
                  "datenameeu ,",
                  "dayofmonth",
                  "FROM ftmicoredb.dim_date",
                  "where calendaryear between 2013 and datepart(year,getdate())</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Standard Calendar",
            "levels": [
              {
                "name": "calendaryear",
                "ordinal": 0,
                "column": "calendaryear"
              },
              {
                "name": "calendaryearmonth",
                "ordinal": 1,
                "column": "calendaryearmonth"
              },
              {
                "name": "fulldate",
                "ordinal": 2,
                "column": "fulldate"
              }
            ]
          },
          {
            "name": "Day of Week",
            "levels": [
              {
                "name": "dayofweek",
                "ordinal": 0,
                "column": "dayofweek"
              }
            ]
          },
          {
            "name": "Business Calendar",
            "levels": [
              {
                "name": "calendaryear",
                "ordinal": 0,
                "column": "calendaryear"
              },
              {
                "name": "calendarmonthofyear",
                "ordinal": 1,
                "column": "calendarmonthofyear"
              },
              {
                "name": "weekofyear",
                "ordinal": 2,
                "column": "weekofyear"
              },
              {
                "name": "dayofmonth",
                "ordinal": 3,
                "column": "dayofmonth"
              }
            ]
          },
          {
            "name": "Fiscal Week",
            "levels": [
              {
                "name": "fiscalweekofyear",
                "ordinal": 0,
                "column": "fiscalweekofyear"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Dates"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT datekey, ",
              "fulldate, ",
              "fulldatename, ",
              "dayofweek as dayofweekkey, ",
              "daynameofweek as dayofweek, ",
              "daynameofweekabbreviated as dayofweekshort, ",
              "weekofyear, ",
              "calendaryearmonth, ",
              "weekofyearname as week, ",
              "monthofyear, ",
              "monthofyearname as calendarmonth, ",
              "--calendarmonthofyearshort, ",
              "calendaryear, ",
              "fiscalyear as year, ",
              "weekstartdate, ",
              "weekenddate, ",
              "--yearstartdate, ",
              "--yearenddate, ",
              "relativeweeks as relativeweekskey, ",
              "--week, ",
              "weekstartdate as weekcommencing, ",
              "weekenddate as weekending, ",
              "relativeyears as relativeyearskey,fiscalweekofyear, ",
              "--calendarmonthkey, ",
              "monthname as calendarmonthofyear, ",
              "monthnameabbreviated as calendarmonthofyearshort,",
              "datenameeu ,",
              "dayofmonth",
              "FROM ftmicoredb.dim_date",
              "where calendaryear between 2013 and datepart(year,getdate())"
            ]
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT datekey, ",
              "fulldate, ",
              "fulldatename, ",
              "dayofweek as dayofweekkey, ",
              "daynameofweek as dayofweek, ",
              "daynameofweekabbreviated as dayofweekshort, ",
              "weekofyear, ",
              "calendaryearmonth, ",
              "weekofyearname as week, ",
              "monthofyear, ",
              "monthofyearname as calendarmonth, ",
              "--calendarmonthofyearshort, ",
              "calendaryear, ",
              "fiscalyear as year, ",
              "weekstartdate, ",
              "weekenddate, ",
              "--yearstartdate, ",
              "--yearenddate, ",
              "relativeweeks as relativeweekskey, ",
              "--week, ",
              "weekstartdate as weekcommencing, ",
              "weekenddate as weekending, ",
              "relativeyears as relativeyearskey,fiscalweekofyear, ",
              "--calendarmonthkey, ",
              "monthname as calendarmonthofyear, ",
              "monthnameabbreviated as calendarmonthofyearshort,",
              "datenameeu ,",
              "dayofmonth",
              "FROM ftmicoredb.dim_date",
              "where calendaryear between 2013 and datepart(year,getdate())</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Pages",
        "columns": [
          {
            "name": "dim_page_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "dim_page_key"
          },
          {
            "name": "uuid",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "uuid"
          },
          {
            "name": "name",
            "dataType": "string",
            "sourceColumn": "name"
          }
        ],
        "partitions": [
          {
            "name": "dim_page",
            "source": {
              "query": [
                "SELECT dim_page_key, uuid, name ",
                " FROM ftdeepviewdb.dim_page"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_page"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT dim_page_key, uuid, name ",
              " FROM ftdeepviewdb.dim_page"
            ]
          }
        ]
      },
      {
        "name": "DailyCounts",
        "isHidden": true,
        "columns": [
          {
            "name": "tablekey",
            "dataType": "int64",
            "sourceColumn": "tablekey"
          },
          {
            "name": "date_key",
            "dataType": "int64",
            "sourceColumn": "date_key"
          },
          {
            "name": "advertiser_key",
            "dataType": "int64",
            "sourceColumn": "advertiser_key"
          },
          {
            "name": "netvalue",
            "dataType": "double",
            "sourceColumn": "netvalue"
          },
          {
            "name": "duration",
            "dataType": "int64",
            "sourceColumn": "duration"
          },
          {
            "name": "dailyrevenue",
            "dataType": "double",
            "sourceColumn": "dailyrevenue"
          },
          {
            "name": "rowcount",
            "dataType": "int64",
            "sourceColumn": "rowcount"
          },
          {
            "name": "netrate",
            "dataType": "double",
            "sourceColumn": "netrate"
          },
          {
            "name": "calc1",
            "dataType": "double",
            "sourceColumn": "calc1"
          },
          {
            "name": "costmodel",
            "dataType": "string",
            "sourceColumn": "costmodel"
          },
          {
            "name": "creative_key",
            "dataType": "int64",
            "sourceColumn": "creative_key"
          },
          {
            "name": "maxrowcount",
            "dataType": "int64",
            "sourceColumn": "maxrowcount"
          }
        ],
        "partitions": [
          {
            "name": "DailyCounts",
            "source": {
              "query": "select * from ftdeepviewdb.dailycounts_creatives",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DailyCounts"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select * from ftdeepviewdb.dailycounts_creatives"
          }
        ]
      },
      {
        "name": "Users_Impressions",
        "columns": [
          {
            "name": "id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "id"
          },
          {
            "name": "userstatus",
            "dataType": "string",
            "sourceColumn": "userstatus"
          }
        ],
        "partitions": [
          {
            "name": "Users",
            "source": {
              "query": [
                "select 0 as id, 'Unknown Users Impressions' as UserStatus",
                "union",
                "select 1 , 'Known Users Impressions'"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Users"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select 0 as id, 'Unknown Users Impressions' as UserStatus",
              "union",
              "select 1 , 'Known Users Impressions'"
            ]
          }
        ]
      },
      {
        "name": "Creatives",
        "columns": [
          {
            "name": "creative_size",
            "dataType": "string",
            "sourceColumn": "creative_size"
          }
        ],
        "partitions": [
          {
            "name": "Creatives",
            "source": {
              "query": "select distinct isnull(creative_size, 'Unknown') as Creative_Size from ftdeepviewdb.facttable",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Creatives"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct isnull(creative_size, 'Unknown') as Creative_Size from ftdeepviewdb.facttable"
          }
        ]
      },
      {
        "name": "Ad_Position",
        "columns": [
          {
            "name": "ad_position",
            "dataType": "string",
            "sourceColumn": "ad_position"
          }
        ],
        "partitions": [
          {
            "name": "Ad Position",
            "source": {
              "query": "select distinct isnull(ad_position, 'Unknown') as Ad_Position from ftdeepviewdb.facttable",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Ad Position"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct isnull(ad_position, 'Unknown') as Ad_Position from ftdeepviewdb.facttable"
          }
        ]
      },
      {
        "name": "Page_Type",
        "columns": [
          {
            "name": "page_type",
            "dataType": "string",
            "sourceColumn": "page_type"
          }
        ],
        "partitions": [
          {
            "name": "Page_Type",
            "source": {
              "query": "select distinct isnull(pt, 'Unknown') as Page_Type from ftdeepviewdb.facttable",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Page_Type"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct isnull(pt, 'Unknown') as Page_Type from ftdeepviewdb.facttable"
          }
        ]
      },
      {
        "name": "Res",
        "columns": [
          {
            "name": "res",
            "dataType": "string",
            "sourceColumn": "res"
          }
        ],
        "partitions": [
          {
            "name": "Res",
            "source": {
              "query": "select distinct isnull(res, 'Unknown') as Res from ftdeepviewdb.facttable",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization"
              },
              {
                "name": "TableWidgetSourceTable"
              },
              {
                "name": "QueryEditorSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Res"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct isnull(res, 'Unknown') as Res from ftdeepviewdb.facttable"
          }
        ]
      },
      {
        "name": "SLV",
        "columns": [
          {
            "name": "slv",
            "dataType": "string",
            "sourceColumn": "slv"
          }
        ],
        "partitions": [
          {
            "name": "SLV",
            "source": {
              "query": "select distinct isnull(slv, 'UNKN') as slv from ftadvertdb.dfp_impressions",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "SLV"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct isnull(slv, 'UNKN') as slv from ftadvertdb.dfp_impressions"
          }
        ]
      },
      {
        "name": "DT_Industry",
        "isHidden": true,
        "columns": [
          {
            "name": "industry_full",
            "dataType": "string",
            "sourceColumn": "industry_full"
          },
          {
            "name": "industry_abv",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "industry_abv"
          }
        ],
        "partitions": [
          {
            "name": "DT_Industry",
            "source": {
              "query": [
                "select  distinct",
                " isnull(dt.industry_abv,'UNKN') as industry_abv",
                "--,",
                "--isnull(dt.industry_full,'Unknown') as industry_full",
                ",case",
                "when fa.industry ='' then 'Unknown'",
                "when fa.industry  is null then 'Unknown'",
                "else isnull(dt.industry_full, 'Unknown')  ",
                "end as industry_full",
                "from ftdeepviewdb.facttable fa",
                "left join ftdeepviewdb.dt_demographics dt on dt.industry_abv = fa.industry"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  distinct",
                  " isnull(dt.industry_abv,'UNKN') as industry_abv",
                  "--,",
                  "--isnull(dt.industry_full,'Unknown') as industry_full",
                  ",case",
                  "when fa.industry ='' then 'Unknown'",
                  "when fa.industry  is null then 'Unknown'",
                  "else isnull(dt.industry_full, 'Unknown')  ",
                  "end as industry_full",
                  "from ftdeepviewdb.facttable fa",
                  "left join ftdeepviewdb.dt_demographics dt on dt.industry_abv = fa.industry</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DT_Industry"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select  distinct",
              " isnull(dt.industry_abv,'UNKN') as industry_abv",
              "--,",
              "--isnull(dt.industry_full,'Unknown') as industry_full",
              ",case",
              "when fa.industry ='' then 'Unknown'",
              "when fa.industry  is null then 'Unknown'",
              "else isnull(dt.industry_full, 'Unknown')  ",
              "end as industry_full",
              "from ftdeepviewdb.facttable fa",
              "left join ftdeepviewdb.dt_demographics dt on dt.industry_abv = fa.industry"
            ]
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  distinct",
              " isnull(dt.industry_abv,'UNKN') as industry_abv",
              "--,",
              "--isnull(dt.industry_full,'Unknown') as industry_full",
              ",case",
              "when fa.industry ='' then 'Unknown'",
              "when fa.industry  is null then 'Unknown'",
              "else isnull(dt.industry_full, 'Unknown')  ",
              "end as industry_full",
              "from ftdeepviewdb.facttable fa",
              "left join ftdeepviewdb.dt_demographics dt on dt.industry_abv = fa.industry</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Users Clicks",
        "columns": [
          {
            "name": "id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "id"
          },
          {
            "name": "userstatus",
            "dataType": "string",
            "sourceColumn": "userstatus"
          }
        ],
        "partitions": [
          {
            "name": "Users Clicks",
            "source": {
              "query": [
                "select 0 as id, 'Unknown Users Clicks' as UserStatus",
                "union",
                "select 1 , 'Known Users Clicks'"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization"
              },
              {
                "name": "TableWidgetSerialization"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Users Clicks"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select 0 as id, 'Unknown Users Clicks' as UserStatus",
              "union",
              "select 1 , 'Known Users Clicks'"
            ]
          }
        ]
      },
      {
        "name": "DT_position",
        "columns": [
          {
            "name": "position_abv",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "position_abv"
          },
          {
            "name": "position_full",
            "dataType": "string",
            "sourceColumn": "position_full"
          }
        ],
        "partitions": [
          {
            "name": "DT_position",
            "source": {
              "query": [
                "select  distinct",
                "isnull(dt.position_abv,'UNKN') as position_abv",
                ",case",
                "when fa.position ='' then 'Unknown'",
                "when fa.position  is null then 'Unknown'",
                "else isnull(dt.position_full, 'Unknown')  ",
                "end as position_full",
                "from ftdeepviewdb.facttable fa",
                "left join ftdeepviewdb.dt_demographics dt on dt.position_abv = fa.position"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  distinct",
                  "isnull(dt.position_abv,'UNKN') as position_abv",
                  ",case",
                  "when fa.position ='' then 'Unknown'",
                  "when fa.position  is null then 'Unknown'",
                  "else isnull(dt.position_full, 'Unknown')  ",
                  "end as position_full",
                  "from ftdeepviewdb.facttable fa",
                  "left join ftdeepviewdb.dt_demographics dt on dt.position_abv = fa.position</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DT_position"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select  distinct",
              "isnull(dt.position_abv,'UNKN') as position_abv",
              ",case",
              "when fa.position ='' then 'Unknown'",
              "when fa.position  is null then 'Unknown'",
              "else isnull(dt.position_full, 'Unknown')  ",
              "end as position_full",
              "from ftdeepviewdb.facttable fa",
              "left join ftdeepviewdb.dt_demographics dt on dt.position_abv = fa.position"
            ]
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  distinct",
              "isnull(dt.position_abv,'UNKN') as position_abv",
              ",case",
              "when fa.position ='' then 'Unknown'",
              "when fa.position  is null then 'Unknown'",
              "else isnull(dt.position_full, 'Unknown')  ",
              "end as position_full",
              "from ftdeepviewdb.facttable fa",
              "left join ftdeepviewdb.dt_demographics dt on dt.position_abv = fa.position</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DT_responsibility",
        "columns": [
          {
            "name": "responsibility_abv",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "responsibility_abv"
          },
          {
            "name": "responsibility_full",
            "dataType": "string",
            "sourceColumn": "responsibility_full"
          }
        ],
        "partitions": [
          {
            "name": "DT_responsibility",
            "source": {
              "query": [
                "select  distinct",
                "case",
                "when  dt.responsibility_abv is null then isnull(fa.responsibility,'UNKN')",
                "when dt.responsibility_abv = '' then 'UNKN'",
                "else dt.responsibility_abv",
                "end as responsibility_abv",
                ",case",
                "when fa.responsibility ='' then 'Unknown'",
                "when fa.responsibility  is null then 'Unknown'",
                "when  dt.responsibility_abv is null then 'Unknown'  ",
                "",
                "else dt.responsibility_full",
                "end as responsibility_full",
                "",
                "from ftdeepviewdb.facttable fa",
                "left join ftdeepviewdb.dt_demographics dt on dt.responsibility_abv = fa.responsibility"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  distinct",
                  "case",
                  "when  dt.responsibility_abv is null then isnull(fa.responsibility,'UNKN')",
                  "when dt.responsibility_abv = '' then 'UNKN'",
                  "else dt.responsibility_abv",
                  "end as responsibility_abv",
                  ",case",
                  "when fa.responsibility ='' then 'Unknown'",
                  "when fa.responsibility  is null then 'Unknown'",
                  "when  dt.responsibility_abv is null then 'Unknown'  ",
                  "",
                  "else dt.responsibility_full",
                  "end as responsibility_full",
                  "",
                  "from ftdeepviewdb.facttable fa",
                  "left join ftdeepviewdb.dt_demographics dt on dt.responsibility_abv = fa.responsibility</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DT_responsibility"
          },
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select  distinct",
              "case",
              "when  dt.responsibility_abv is null then isnull(fa.responsibility,'UNKN')",
              "when dt.responsibility_abv = '' then 'UNKN'",
              "else dt.responsibility_abv",
              "end as responsibility_abv",
              ",case",
              "when fa.responsibility ='' then 'Unknown'",
              "when fa.responsibility  is null then 'Unknown'",
              "when  dt.responsibility_abv is null then 'Unknown'  ",
              "",
              "else dt.responsibility_full",
              "end as responsibility_full",
              "",
              "from ftdeepviewdb.facttable fa",
              "left join ftdeepviewdb.dt_demographics dt on dt.responsibility_abv = fa.responsibility"
            ]
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select  distinct",
              "case",
              "when  dt.responsibility_abv is null then isnull(fa.responsibility,'UNKN')",
              "when dt.responsibility_abv = '' then 'UNKN'",
              "else dt.responsibility_abv",
              "end as responsibility_abv",
              ",case",
              "when fa.responsibility ='' then 'Unknown'",
              "when fa.responsibility  is null then 'Unknown'",
              "when  dt.responsibility_abv is null then 'Unknown'  ",
              "",
              "else dt.responsibility_full",
              "end as responsibility_full",
              "",
              "from ftdeepviewdb.facttable fa",
              "left join ftdeepviewdb.dt_demographics dt on dt.responsibility_abv = fa.responsibility</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "demographic_seg_new",
        "isHidden": true,
        "columns": [
          {
            "name": "responsibility_abv",
            "dataType": "string",
            "sourceColumn": "responsibility_abv",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "responsibility",
            "dataType": "string",
            "sourceColumn": "responsibility",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "position_abv",
            "dataType": "string",
            "sourceColumn": "position_abv",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "position",
            "dataType": "string",
            "sourceColumn": "position",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "industry_abv",
            "dataType": "string",
            "sourceColumn": "industry_abv",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "industry",
            "dataType": "string",
            "sourceColumn": "industry",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "segmentid",
            "dataType": "string",
            "sourceColumn": "segmentid",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "demographic_seg_new",
            "dataView": "full",
            "source": {
              "query": "select responsibility_abv,responsibility,position_abv,position,industry_abv,industry,cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select responsibility_abv,responsibility,position_abv,position,industry_abv,industry,cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select responsibility_abv,responsibility,position_abv,position,industry_abv,industry,cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "demographic_seg_new"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select responsibility_abv,responsibility,position_abv,position,industry_abv,industry,cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "manytomany_new",
        "isHidden": true,
        "columns": [
          {
            "name": "demographic segments",
            "dataType": "string",
            "sourceColumn": "demographic segments",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "segmentid",
            "dataType": "string",
            "sourceColumn": "segmentid",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "manytomany_new",
            "dataView": "full",
            "source": {
              "query": "select \"demographic segments\", cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new_manytomany",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select \"demographic segments\", cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new_manytomany</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select \"demographic segments\", cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new_manytomany"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "manytomany_new"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select \"demographic segments\", cast(segmentid as text) from ftdeepviewdb.dim_demographic_segments_new_manytomany</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "Segment_name_DT",
        "columns": [
          {
            "name": "segment_name",
            "dataType": "string",
            "sourceColumn": "segment_name",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Segment_name",
            "dataView": "full",
            "source": {
              "query": "select distinct \"demographic segments\" as Segment_Name from ftdeepviewdb.dim_demographic_segments_new_manytomany",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct \"demographic segments\" as Segment_Name from ftdeepviewdb.dim_demographic_segments_new_manytomany</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct \"demographic segments\" as Segment_Name from ftdeepviewdb.dim_demographic_segments_new_manytomany"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Segment_name"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct \"demographic segments\" as Segment_Name from ftdeepviewdb.dim_demographic_segments_new_manytomany</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "gender",
        "columns": [
          {
            "name": "gender",
            "dataType": "string",
            "sourceColumn": "gender",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "gender",
            "dataView": "full",
            "source": {
              "query": [
                "select 'M' as gender ",
                "union",
                "select 'F' ",
                "union ",
                "select 'U'"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 'M' as gender ",
                  "union",
                  "select 'F' ",
                  "union ",
                  "select 'U'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select 'M' as gender ",
              "union",
              "select 'F' ",
              "union ",
              "select 'U'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "gender"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 'M' as gender ",
              "union",
              "select 'F' ",
              "union ",
              "select 'U'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "spoor",
        "isHidden": true,
        "columns": [
          {
            "name": "user_id",
            "dataType": "string",
            "sourceColumn": "user_id"
          }
        ],
        "partitions": [
          {
            "name": "spoor",
            "source": {
              "query": "select user_id from ftdeepviewdb.dim_user_id where user_id is not null",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select user_id from ftdeepviewdb.dim_user_id where user_id is not null</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select user_id from ftdeepviewdb.dim_user_id where user_id is not null"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "spoor"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select user_id from ftdeepviewdb.dim_user_id where user_id is not null</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "krux_mtom",
        "isHidden": true,
        "columns": [
          {
            "name": "split_part",
            "dataType": "string",
            "sourceColumn": "split_part",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "user_id",
            "dataType": "string",
            "sourceColumn": "user_id"
          }
        ],
        "partitions": [
          {
            "name": "krux_mtom",
            "dataView": "full",
            "source": {
              "query": [
                "select user_id,split_part from  ftdeepviewdb.dim_krux_mtom where user_id is not null",
                "and len(split_part) < 10"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select user_id,split_part from  ftdeepviewdb.dim_krux_mtom where user_id is not null",
                  "and len(split_part) < 10</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select user_id,split_part from  ftdeepviewdb.dim_krux_mtom where user_id is not null",
              "and len(split_part) < 10"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "krux_mtom"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select user_id,split_part from  ftdeepviewdb.dim_krux_mtom where user_id is not null",
              "and len(split_part) < 10</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "krux_Segment",
        "columns": [
          {
            "name": "segment_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "segment_name",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "segment"
          }
        ],
        "partitions": [
          {
            "name": "krux_Segment",
            "dataView": "full",
            "source": {
              "query": "select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Krux_Segment_User_Total",
            "levels": [
              {
                "name": "segment",
                "ordinal": 0,
                "column": "segment"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "krux_Segment"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "dim_krux",
        "isHidden": true,
        "columns": [
          {
            "name": "krux_key",
            "dataType": "int64",
            "sourceColumn": "krux_key",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "krux",
            "dataType": "string",
            "sourceColumn": "krux",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "dim_krux",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT krux_key, krux ",
                "\tFROM ftdeepviewdb.dim_krux"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT krux_key, krux ",
                  "\tFROM ftdeepviewdb.dim_krux</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT krux_key, krux ",
              "\tFROM ftdeepviewdb.dim_krux"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "dim_krux"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT krux_key, krux ",
              "\tFROM ftdeepviewdb.dim_krux</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "many_to_many_krux",
        "isHidden": true,
        "columns": [
          {
            "name": "split_part",
            "dataType": "string",
            "sourceColumn": "split_part",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "krux_key",
            "dataType": "string",
            "sourceColumn": "krux_key",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "many_to_many_krux",
            "dataView": "full",
            "source": {
              "query": "SELECT split_part, krux_key\tFROM ftdeepviewdb.dim_krux_mtom_krux",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT split_part, krux_key\tFROM ftdeepviewdb.dim_krux_mtom_krux</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT split_part, krux_key\tFROM ftdeepviewdb.dim_krux_mtom_krux"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "many_to_many_krux"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT split_part, krux_key\tFROM ftdeepviewdb.dim_krux_mtom_krux</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "krux_segment_krux_only",
        "columns": [
          {
            "name": "segment_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "segment_name",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "segment",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "krux_segment_krux_only",
            "dataView": "full",
            "source": {
              "query": "select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name",
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Krux_Segment_Only",
            "levels": [
              {
                "name": "segment",
                "ordinal": 0,
                "column": "segment"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "krux_segment_krux_only"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select segment_name,segment_id || ' - (' || segment_name  || ')'  as Segment from ftdeepviewdb.krux_segment_name</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "User_Demographics",
        "columns": [
          {
            "name": "gender",
            "dataType": "string",
            "sourceColumn": "gender",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "position",
            "dataType": "string",
            "sourceColumn": "position",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "responsibility",
            "dataType": "string",
            "sourceColumn": "responsibility",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "industry",
            "dataType": "string",
            "sourceColumn": "industry",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "investorgroup",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "investorgroup",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "companysize",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "companysize",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "companyturnover",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "companyturnover",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "demographic segments",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "demographic segments",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "dim_user_demographics_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "dim_user_demographics_key",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "User_Demographics",
            "dataView": "full",
            "source": {
              "query": [
                "SELECT   ",
                "",
                "gender",
                ",position",
                ",responsibility",
                ",industry",
                ",investorgroup",
                ",companysize",
                ",companyturnover",
                ",case",
                "when position in ('OWNER/PARTNER/PROPRIETOR',",
                "'CEO/PRESIDENT/CHAIRMAN',",
                "'OTHER C LEVEL (CFO/COO/CIO/CMO)',",
                "'EXEC MGMT (EVP/SVP/MD)',",
                "'VP/DIRECTOR') then UPPER('C-Suite')",
                "when position in ('SENIOR MANAGER/DEPT HEAD',",
                "'PROFESSIONAL',",
                "'CONSULTANT',",
                "'MANAGER/SUPERVISOR',",
                "'ANALYST',",
                "'ASSOCIATE',",
                "'PROGRAMME/PROJECT MANAGER',",
                "'SECRETARY/TREASURER',",
                "'OTHER') then UPPER('Decision Makers')",
                "when position in ('INFORMATION TECHNOLOGY',",
                "'IT/COMPUTING',",
                "'IT/TECH/TELECOMS',",
                "'IT AND COMPUTING',",
                "'TECHNICAL/BUSINESS SPECIALIST') then UPPER('Technology Decision Makers')",
                "when industry in ('IT/TECH/TELECOMS','IT/COMPUTING')",
                "then UPPER('Technology Decision Makers')",
                "when responsibility in ('INFORMATION TECHNOLOGY','IT/COMPUTING')",
                "then UPPER('Technology Decision Makers')",
                "when position in ('BANKING AND INVESTMENT',",
                "'BROKER/TRADER',",
                "'ACCOUNTING/FINANCE',",
                "'INSURANCE',",
                "'MONEY/PORTFOLIO MANAGEMENT',",
                "'RISK MANAGEMENT/COMPLIANCE',",
                "'BROKER/TRADER/ADVISOR',",
                "'CONTROLLER/FINANCIAL OFF',",
                "'BANKING',",
                "'FINANCIAL SERVICES',",
                "'FUND/ASSET MANAGEMENT') then UPPER('Financial Professionals')",
                "when industry in ('BANKING','FINANCIAL SERVICES','FUND/ASSET MANAGEMENT')",
                "then UPPER('BANKING AND INVESTMENT')",
                "when responsibility in ('BROKER/TRADER','ACCOUNTING/FINANCE','INSURANCE','MONEY/PORTFOLIO MANAGEMENT','RISK MANAGEMENT/COMPLIANCE')",
                "then UPPER('BANKING AND INVESTMENT')",
                "when responsibility in ('IFA/FINANCIAL ADVISER') then UPPER('Financial Advisors')",
                "when position in ('DIPLOMAT/SEN GOVT OFFICER',",
                "'POLITICIAN/GOVERNMENT MINISTER',",
                "'GOV/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
                "when industry in ('GOVT/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
                "when position like '%L ORG OFFICIAL'",
                "then UPPER('Government/Lobbyists')",
                "else 'UNKNOWN'",
                "end as \"Demographic Segments\"",
                ",dim_user_demographics_key",
                "",
                "FROM [ftdeepviewdb].[dim_user_demographics]"
              ],
              "dataSource": "Custom 25"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT   ",
                  "",
                  "gender",
                  ",position",
                  ",responsibility",
                  ",industry",
                  ",investorgroup",
                  ",companysize",
                  ",companyturnover",
                  ",case",
                  "when position in ('OWNER/PARTNER/PROPRIETOR',",
                  "'CEO/PRESIDENT/CHAIRMAN',",
                  "'OTHER C LEVEL (CFO/COO/CIO/CMO)',",
                  "'EXEC MGMT (EVP/SVP/MD)',",
                  "'VP/DIRECTOR') then UPPER('C-Suite')",
                  "when position in ('SENIOR MANAGER/DEPT HEAD',",
                  "'PROFESSIONAL',",
                  "'CONSULTANT',",
                  "'MANAGER/SUPERVISOR',",
                  "'ANALYST',",
                  "'ASSOCIATE',",
                  "'PROGRAMME/PROJECT MANAGER',",
                  "'SECRETARY/TREASURER',",
                  "'OTHER') then UPPER('Decision Makers')",
                  "when position in ('INFORMATION TECHNOLOGY',",
                  "'IT/COMPUTING',",
                  "'IT/TECH/TELECOMS',",
                  "'IT AND COMPUTING',",
                  "'TECHNICAL/BUSINESS SPECIALIST') then UPPER('Technology Decision Makers')",
                  "when industry in ('IT/TECH/TELECOMS','IT/COMPUTING')",
                  "then UPPER('Technology Decision Makers')",
                  "when responsibility in ('INFORMATION TECHNOLOGY','IT/COMPUTING')",
                  "then UPPER('Technology Decision Makers')",
                  "when position in ('BANKING AND INVESTMENT',",
                  "'BROKER/TRADER',",
                  "'ACCOUNTING/FINANCE',",
                  "'INSURANCE',",
                  "'MONEY/PORTFOLIO MANAGEMENT',",
                  "'RISK MANAGEMENT/COMPLIANCE',",
                  "'BROKER/TRADER/ADVISOR',",
                  "'CONTROLLER/FINANCIAL OFF',",
                  "'BANKING',",
                  "'FINANCIAL SERVICES',",
                  "'FUND/ASSET MANAGEMENT') then UPPER('Financial Professionals')",
                  "when industry in ('BANKING','FINANCIAL SERVICES','FUND/ASSET MANAGEMENT')",
                  "then UPPER('BANKING AND INVESTMENT')",
                  "when responsibility in ('BROKER/TRADER','ACCOUNTING/FINANCE','INSURANCE','MONEY/PORTFOLIO MANAGEMENT','RISK MANAGEMENT/COMPLIANCE')",
                  "then UPPER('BANKING AND INVESTMENT')",
                  "when responsibility in ('IFA/FINANCIAL ADVISER') then UPPER('Financial Advisors')",
                  "when position in ('DIPLOMAT/SEN GOVT OFFICER',",
                  "'POLITICIAN/GOVERNMENT MINISTER',",
                  "'GOV/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
                  "when industry in ('GOVT/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
                  "when position like '%L ORG OFFICIAL'",
                  "then UPPER('Government/Lobbyists')",
                  "else 'UNKNOWN'",
                  "end as \"Demographic Segments\"",
                  ",dim_user_demographics_key",
                  "",
                  "FROM [ftdeepviewdb].[dim_user_demographics]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT   ",
              "",
              "gender",
              ",position",
              ",responsibility",
              ",industry",
              ",investorgroup",
              ",companysize",
              ",companyturnover",
              ",case",
              "when position in ('OWNER/PARTNER/PROPRIETOR',",
              "'CEO/PRESIDENT/CHAIRMAN',",
              "'OTHER C LEVEL (CFO/COO/CIO/CMO)',",
              "'EXEC MGMT (EVP/SVP/MD)',",
              "'VP/DIRECTOR') then UPPER('C-Suite')",
              "when position in ('SENIOR MANAGER/DEPT HEAD',",
              "'PROFESSIONAL',",
              "'CONSULTANT',",
              "'MANAGER/SUPERVISOR',",
              "'ANALYST',",
              "'ASSOCIATE',",
              "'PROGRAMME/PROJECT MANAGER',",
              "'SECRETARY/TREASURER',",
              "'OTHER') then UPPER('Decision Makers')",
              "when position in ('INFORMATION TECHNOLOGY',",
              "'IT/COMPUTING',",
              "'IT/TECH/TELECOMS',",
              "'IT AND COMPUTING',",
              "'TECHNICAL/BUSINESS SPECIALIST') then UPPER('Technology Decision Makers')",
              "when industry in ('IT/TECH/TELECOMS','IT/COMPUTING')",
              "then UPPER('Technology Decision Makers')",
              "when responsibility in ('INFORMATION TECHNOLOGY','IT/COMPUTING')",
              "then UPPER('Technology Decision Makers')",
              "when position in ('BANKING AND INVESTMENT',",
              "'BROKER/TRADER',",
              "'ACCOUNTING/FINANCE',",
              "'INSURANCE',",
              "'MONEY/PORTFOLIO MANAGEMENT',",
              "'RISK MANAGEMENT/COMPLIANCE',",
              "'BROKER/TRADER/ADVISOR',",
              "'CONTROLLER/FINANCIAL OFF',",
              "'BANKING',",
              "'FINANCIAL SERVICES',",
              "'FUND/ASSET MANAGEMENT') then UPPER('Financial Professionals')",
              "when industry in ('BANKING','FINANCIAL SERVICES','FUND/ASSET MANAGEMENT')",
              "then UPPER('BANKING AND INVESTMENT')",
              "when responsibility in ('BROKER/TRADER','ACCOUNTING/FINANCE','INSURANCE','MONEY/PORTFOLIO MANAGEMENT','RISK MANAGEMENT/COMPLIANCE')",
              "then UPPER('BANKING AND INVESTMENT')",
              "when responsibility in ('IFA/FINANCIAL ADVISER') then UPPER('Financial Advisors')",
              "when position in ('DIPLOMAT/SEN GOVT OFFICER',",
              "'POLITICIAN/GOVERNMENT MINISTER',",
              "'GOV/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
              "when industry in ('GOVT/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
              "when position like '%L ORG OFFICIAL'",
              "then UPPER('Government/Lobbyists')",
              "else 'UNKNOWN'",
              "end as \"Demographic Segments\"",
              ",dim_user_demographics_key",
              "",
              "FROM [ftdeepviewdb].[dim_user_demographics]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "User_Demographics"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT   ",
              "",
              "gender",
              ",position",
              ",responsibility",
              ",industry",
              ",investorgroup",
              ",companysize",
              ",companyturnover",
              ",case",
              "when position in ('OWNER/PARTNER/PROPRIETOR',",
              "'CEO/PRESIDENT/CHAIRMAN',",
              "'OTHER C LEVEL (CFO/COO/CIO/CMO)',",
              "'EXEC MGMT (EVP/SVP/MD)',",
              "'VP/DIRECTOR') then UPPER('C-Suite')",
              "when position in ('SENIOR MANAGER/DEPT HEAD',",
              "'PROFESSIONAL',",
              "'CONSULTANT',",
              "'MANAGER/SUPERVISOR',",
              "'ANALYST',",
              "'ASSOCIATE',",
              "'PROGRAMME/PROJECT MANAGER',",
              "'SECRETARY/TREASURER',",
              "'OTHER') then UPPER('Decision Makers')",
              "when position in ('INFORMATION TECHNOLOGY',",
              "'IT/COMPUTING',",
              "'IT/TECH/TELECOMS',",
              "'IT AND COMPUTING',",
              "'TECHNICAL/BUSINESS SPECIALIST') then UPPER('Technology Decision Makers')",
              "when industry in ('IT/TECH/TELECOMS','IT/COMPUTING')",
              "then UPPER('Technology Decision Makers')",
              "when responsibility in ('INFORMATION TECHNOLOGY','IT/COMPUTING')",
              "then UPPER('Technology Decision Makers')",
              "when position in ('BANKING AND INVESTMENT',",
              "'BROKER/TRADER',",
              "'ACCOUNTING/FINANCE',",
              "'INSURANCE',",
              "'MONEY/PORTFOLIO MANAGEMENT',",
              "'RISK MANAGEMENT/COMPLIANCE',",
              "'BROKER/TRADER/ADVISOR',",
              "'CONTROLLER/FINANCIAL OFF',",
              "'BANKING',",
              "'FINANCIAL SERVICES',",
              "'FUND/ASSET MANAGEMENT') then UPPER('Financial Professionals')",
              "when industry in ('BANKING','FINANCIAL SERVICES','FUND/ASSET MANAGEMENT')",
              "then UPPER('BANKING AND INVESTMENT')",
              "when responsibility in ('BROKER/TRADER','ACCOUNTING/FINANCE','INSURANCE','MONEY/PORTFOLIO MANAGEMENT','RISK MANAGEMENT/COMPLIANCE')",
              "then UPPER('BANKING AND INVESTMENT')",
              "when responsibility in ('IFA/FINANCIAL ADVISER') then UPPER('Financial Advisors')",
              "when position in ('DIPLOMAT/SEN GOVT OFFICER',",
              "'POLITICIAN/GOVERNMENT MINISTER',",
              "'GOV/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
              "when industry in ('GOVT/PUBLIC SERVICE/NGO') then UPPER('Government/Lobbyists')",
              "when position like '%L ORG OFFICIAL'",
              "then UPPER('Government/Lobbyists')",
              "else 'UNKNOWN'",
              "end as \"Demographic Segments\"",
              ",dim_user_demographics_key",
              "",
              "FROM [ftdeepviewdb].[dim_user_demographics]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "1699b81d-e5ce-4f66-8853-18d8364772e1",
        "fromTable": "Metrics",
        "fromColumn": "category_key",
        "toTable": "Categories",
        "toColumn": "category_key"
      },
      {
        "name": "814afc1f-30b0-45b5-8f61-78db0f60143c",
        "fromTable": "Metrics",
        "fromColumn": "country_key",
        "toTable": "Region",
        "toColumn": "dim_event_country_key"
      },
      {
        "name": "49a3b5b4-6c88-438b-8d5e-433c11276a97",
        "fromTable": "Metrics",
        "fromColumn": "time_key",
        "toTable": "Time_of_Day",
        "toColumn": "dim_time_key"
      },
      {
        "name": "4fc0da81-b412-4885-80f6-a27ebbf9b167",
        "fromTable": "Metrics",
        "fromColumn": "page_key",
        "toTable": "Pages",
        "toColumn": "dim_page_key"
      },
      {
        "name": "9f59babd-8dba-4110-aa3d-e95f8acd2bae",
        "fromTable": "Metrics",
        "fromColumn": "imp_demos_key",
        "toTable": "Event_Demographics",
        "toColumn": "dim_event_demographics_key"
      },
      {
        "name": "233edad9-6b04-49d8-aa6a-ea2cad0162ba",
        "fromTable": "Metrics",
        "fromColumn": "ad_unit_key",
        "toTable": "AdUnit",
        "toColumn": "ad_unit_id"
      },
      {
        "name": "6beedddd-558b-44fb-85ca-cb1f83ee072e",
        "fromTable": "Metrics",
        "fromColumn": "ad_position",
        "toTable": "Ad_Position",
        "toColumn": "ad_position"
      },
      {
        "name": "e7bf9fed-3765-4f87-b0ae-695cbcc20409",
        "fromTable": "Metrics",
        "fromColumn": "adcreative_key",
        "toTable": "Advertisers",
        "toColumn": "adcreative_key"
      },
      {
        "name": "6511e774-113a-40df-a8dc-b6c5bcab467a",
        "fromTable": "Metrics",
        "fromColumn": "tablekey",
        "toTable": "DailyCounts",
        "toColumn": "tablekey"
      },
      {
        "name": "f7ac5be5-31f9-44a5-9c76-6c1c9d08a33e",
        "fromTable": "Metrics",
        "fromColumn": "creative_size",
        "toTable": "Creatives",
        "toColumn": "creative_size"
      },
      {
        "name": "c54a7daa-3e77-4ddb-9aec-0ec3e593b5c9",
        "fromTable": "Metrics",
        "fromColumn": "pt",
        "toTable": "Page_Type",
        "toColumn": "page_type"
      },
      {
        "name": "b467bda5-9037-43e3-86d7-0f2a716f366e",
        "fromTable": "Metrics",
        "fromColumn": "res",
        "toTable": "Res",
        "toColumn": "res"
      },
      {
        "name": "9bde0c87-d948-4f50-9df5-992a004fa295",
        "fromTable": "Metrics",
        "fromColumn": "Impressions Erights Users",
        "toTable": "Users_Impressions",
        "toColumn": "id"
      },
      {
        "name": "97937269-2b2c-48d8-a984-b71d23d111d8",
        "fromTable": "Metrics",
        "fromColumn": "slv",
        "toTable": "SLV",
        "toColumn": "slv"
      },
      {
        "name": "1591a9c2-6ba1-4c9c-825c-1c225ab779aa",
        "fromTable": "Metrics",
        "fromColumn": "industry",
        "toTable": "DT_Industry",
        "toColumn": "industry_abv"
      },
      {
        "name": "5fde4cbd-505e-4105-be88-5470e1f10aa2",
        "fromTable": "Metrics",
        "fromColumn": "Clicks Erights Users",
        "toTable": "Users Clicks",
        "toColumn": "id"
      },
      {
        "name": "68728307-b468-4ed4-83aa-970583be7a01",
        "fromTable": "Metrics",
        "fromColumn": "position",
        "toTable": "DT_position",
        "toColumn": "position_abv"
      },
      {
        "name": "d8b59a1a-60b2-45c1-8b8e-68ac621e023a",
        "fromTable": "Metrics",
        "fromColumn": "responsibility",
        "toTable": "DT_responsibility",
        "toColumn": "responsibility_abv"
      },
      {
        "name": "e542a364-86c4-4678-8b1c-fd5fd8908a47",
        "fromTable": "Metrics",
        "fromColumn": "segmentid",
        "toTable": "demographic_seg_new",
        "toColumn": "segmentid"
      },
      {
        "name": "7f660c73-c990-480d-bd20-30e119c356f0",
        "fromTable": "manytomany_new",
        "fromColumn": "segmentid",
        "toTable": "demographic_seg_new",
        "toColumn": "segmentid",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f403567b-6e09-434c-b47d-0bdda5541ac8",
        "fromTable": "manytomany_new",
        "fromColumn": "demographic segments",
        "toTable": "Segment_name_DT",
        "toColumn": "segment_name"
      },
      {
        "name": "555e94af-5c4b-4ee3-a520-60f5bcda8124",
        "fromTable": "Metrics",
        "fromColumn": "gender",
        "toTable": "gender",
        "toColumn": "gender"
      },
      {
        "name": "aa2be122-3c91-40c6-9fb2-3790a09b17e9",
        "fromTable": "Metrics",
        "fromColumn": "date_key",
        "toTable": "Dates",
        "toColumn": "datekey"
      },
      {
        "name": "017baeea-ee78-4549-bbe4-05be1133a3fc",
        "fromTable": "krux_mtom",
        "fromColumn": "split_part",
        "toTable": "krux_Segment",
        "toColumn": "segment_name"
      },
      {
        "name": "8d4b7578-f883-4500-b230-3651c81a1ab0",
        "fromTable": "Metrics",
        "fromColumn": "user_demos_key",
        "toTable": "User_Demographics",
        "toColumn": "dim_user_demographics_key"
      },
      {
        "name": "b8cb19ca-875d-413c-bd4b-81632ede539c",
        "fromTable": "many_to_many_krux",
        "fromColumn": "krux_key",
        "toTable": "dim_krux",
        "toColumn": "krux_key",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "9ad097aa-3f40-4079-b1c4-0d7c200527ee",
        "fromTable": "many_to_many_krux",
        "fromColumn": "split_part",
        "toTable": "krux_segment_krux_only",
        "toColumn": "segment_name"
      },
      {
        "name": "fbfc649c-e37b-4a44-9153-70ad9a42e214",
        "fromTable": "krux_mtom",
        "fromColumn": "user_id",
        "toTable": "spoor",
        "toColumn": "user_id",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "76ac279b-35a0-47a1-8aa0-873af2c41f46",
        "fromTable": "Metrics",
        "fromColumn": "krux_key",
        "toTable": "dim_krux",
        "toColumn": "krux_key"
      },
      {
        "name": "788bdc3f-0f7e-48b7-a418-093b49221263",
        "fromTable": "Metrics",
        "fromColumn": "user_id",
        "toTable": "spoor",
        "toColumn": "user_id"
      }
    ],
    "roles": [
      {
        "name": "Users",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "ADFT\\DLO-AWS Redshift Users",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-1588"
          },
          {
            "memberName": "ADFT\\Magdalena.Ward",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-7681"
          },
          {
            "memberName": "ADFT\\Aiea.Torres",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-9176"
          },
          {
            "memberName": "ADFT\\Annie.Simoy",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-9450"
          },
          {
            "memberName": "ADFT\\Barry.Cassidy",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-8153"
          },
          {
            "memberName": "ADFT\\chad.balluza",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-7133"
          },
          {
            "memberName": "ADFT\\robin.goad",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-2595"
          },
          {
            "memberName": "ADFT\\joshua.ford",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-8139"
          },
          {
            "memberName": "ADFT\\Alistair.Smith",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-7697"
          },
          {
            "memberName": "ADFT\\Malika.Mauldin",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-7369"
          },
          {
            "memberName": "ADFT\\Lukasz.Redas",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-14644"
          },
          {
            "memberName": "ADFT\\henry.ireland",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-15140"
          },
          {
            "memberName": "ADFT\\yuki.pang",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-14715"
          },
          {
            "memberName": "ADFT\\Nicola.Sherris",
            "memberId": "S-1-5-21-3969848028-2180855670-1813860057-7907"
          }
        ]
      }
    ]
  },
  "id": "SemanticModel"
}